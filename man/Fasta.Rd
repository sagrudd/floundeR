% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fasta.R
\name{Fasta}
\alias{Fasta}
\title{R6 Class for loading and analysing FASTA files}
\description{
This class aims to simplify the handling and exploration of FASTA files and
provides simple methods for accessing information that can be used to assess
bulk contents from a FASTA file - the analysis framework is provided by
Rsamtools (alone).
}
\examples{

## ------------------------------------------------
## Method `Fasta$new`
## ------------------------------------------------

canonical_fasta <- flnDr("cluster_cons.fasta.bgz")
fasta <- Fasta$new(canonical_fasta)
}
\section{Super class}{
\code{\link[floundeR:FloundeR]{floundeR::FloundeR}} -> \code{Fasta}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{sequencingset}}{The \code{sequencingset} active binding returns a sequencingset object
that is canonically structured around the \code{passes_filtering} logical
field to allow assessment of sequencing characteristics.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Fasta$new()}}
\item \href{#method-sequence_chunks}{\code{Fasta$sequence_chunks()}}
\item \href{#method-get_sequence_chunk}{\code{Fasta$get_sequence_chunk()}}
\item \href{#method-get_tibble_chunk}{\code{Fasta$get_tibble_chunk()}}
\item \href{#method-get_index}{\code{Fasta$get_index()}}
\item \href{#method-count}{\code{Fasta$count()}}
\item \href{#method-as_tibble}{\code{Fasta$as_tibble()}}
\item \href{#method-clone}{\code{Fasta$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="floundeR" data-topic="FloundeR" data-id="bin_data">}\href{../../floundeR/html/FloundeR.html#method-bin_data}{\code{floundeR::FloundeR$bin_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="floundeR" data-topic="FloundeR" data-id="num_scale">}\href{../../floundeR/html/FloundeR.html#method-num_scale}{\code{floundeR::FloundeR$num_scale()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="floundeR" data-topic="FloundeR" data-id="nums_scale">}\href{../../floundeR/html/FloundeR.html#method-nums_scale}{\code{floundeR::FloundeR$nums_scale()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="floundeR" data-topic="FloundeR" data-id="print">}\href{../../floundeR/html/FloundeR.html#method-print}{\code{floundeR::FloundeR$print()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new Fasta object. This
initialisation method performs other sanity checking
of the defined file(s) to ensure that it is indeed
parseable and creates the required data structures.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Fasta$new(fasta_file)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fasta_file}}{The source
sequencing_summary file.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{Fasta} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{canonical_fasta <- flnDr("cluster_cons.fasta.bgz")
fasta <- Fasta$new(canonical_fasta)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sequence_chunks"></a>}}
\if{latex}{\out{\hypertarget{method-sequence_chunks}{}}}
\subsection{Method \code{sequence_chunks()}}{
Split the fasta sequence file explored by the package into sequence
chunks for e.g. import into a relational database.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Fasta$sequence_chunks(chunk_size = 1000)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{chunk_size}}{The number of fasta entries that should be contained
within a single chunk (default: 1000)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
an invisible integer that defines the number of possible chunks;
this can for example be iterated over
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_sequence_chunk"></a>}}
\if{latex}{\out{\hypertarget{method-get_sequence_chunk}{}}}
\subsection{Method \code{get_sequence_chunk()}}{
Get a chunk of fasta sequences from a larger monolithic file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Fasta$get_sequence_chunk(id = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the chunk (see \verb{$sequence_chunks()}) to extract sequence for -
this must be an integer that is > 0 and <= sequence_chunks.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
DNAStringSet containing the fasta entries corresponding to the
specified sequence chunk.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_tibble_chunk"></a>}}
\if{latex}{\out{\hypertarget{method-get_tibble_chunk}{}}}
\subsection{Method \code{get_tibble_chunk()}}{
Get a chunk of fasta sequences from a larger monolithic file as a tibble
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Fasta$get_tibble_chunk(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the chunk (see \verb{$sequence_chunks()}) to extract sequence for -
this must be an integer that is > 0 and <= sequence_chunks.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{tibble} containing the fasta entries corresponding to the
specified sequence chunk.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_index"></a>}}
\if{latex}{\out{\hypertarget{method-get_index}{}}}
\subsection{Method \code{get_index()}}{
return the Rsamtools FASTA index
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Fasta$get_index()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
GRanges object describing the fasta elements contained within the
sequence file
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-count"></a>}}
\if{latex}{\out{\hypertarget{method-count}{}}}
\subsection{Method \code{count()}}{
return the number of sequence elements contained within the sequence
file specified
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Fasta$count()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
integer of fasta entries in file
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-as_tibble"></a>}}
\if{latex}{\out{\hypertarget{method-as_tibble}{}}}
\subsection{Method \code{as_tibble()}}{
Export the imported dataset(s) as a tibble

The Fasta R6 object consumes a fasta format file and creates an object in
memory that can be explored, sliced and filtered. This method dumps
out the in-memory object for further exploration and development.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Fasta$as_tibble()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A tibble representation of the starting dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Fasta$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
